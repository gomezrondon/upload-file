# how to call the post endpoint and pass the file using curl
curl -X POST  -F file=@C:/tmp/text.txt  http://localhost:8080/file-upload

# new version of enpoint OJO con el puerto
curl -X POST  -F file=@C:/tmp/text.txt  http://localhost:8081/stt/lang/en --output audio4.mp3

# gets time
curl  http://localhost:8080/time

docker tag upload-file:latest gcr.io/<PROJECT-ID>/uplaod-file:v1
docker push gcr.io/<PROJECT-ID>/uplaod-file:v1

#download and image
curl http://localhost:8080/image --output image33.png
curl http://localhost:8080/mp3 --output audio33.mp3

# build image
docker build . -t upload-file

java -agentlib:native-image-agent=config-output-dir=META-INF/native-image -jar ./build/libs/uplaod-file-latest.jar


// borrar images y forzar
docker images | grep "none" | awk '{print $3}' | xargs docker rmi -f
docker images | grep "uplaod-file" | awk '{print $3}' | xargs docker rmi -f

----------
curl -X POST \
  http://localhost:8080/zip-files \
  -H 'Content-Type: multipart/form-data' \
  -F 'files=audio7.mp3' \
  -F 'files=@<file2>' \
  -F 'files=@<file3>' \
  -o files.zip

  ---------------
  curl -X POST \
    http://localhost:8080/zip-files \
    -H 'Content-Type: multipart/form-data' \
    -F 'files=notes.txt' \
    -o files.zip

### este funciona
curl -X POST   -F files=@"notes.txt"  http://localhost:8080/zip-files
### este funciona
curl -X POST   -F files=@"notes.txt" -F files=@"Dockerfile" http://localhost:8080/zip-files



